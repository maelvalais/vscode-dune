<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Dune</string>
    <key>scopeName</key>
    <string>source.dune</string>
    <key>fileTypes</key>
    <array>
      <string>jbuild</string>
      <string>dune</string>
      <string>dune-project</string>
    </array>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comments</string>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.dune</string>
        <key>begin</key>
        <string>\(\s*(lang|using|library|rule|executable|executables|rule|ocamllex|ocamlyacc|menhir|install|alias|copy_files|copy_files#|jbuild_version|include)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.class.stanza.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.library.field.dune</string>
        <key>begin</key>
        <string>\(\s*(name|public_name|synopsis|install_c_headers|ppx_runtime_libraries|c_flags|cxx_flags|c_names|cxx_names|library_flags|c_library_flags|virtual_deps|modes|kind|wrapped|optional|self_build_stubs_archive|no_dynlink|ppx\.driver)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.rule.dune</string>
        <key>begin</key>
        <string>\(\s*(targets|deps|locks|loc|mode|action)\s</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.mono-sexp.dune</string>
        <key>match</key>
        <string>\(\s*(fallback|optional)\s*\)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.rule.action.dune</string>
        <key>begin</key>
        <string>\(\s*(run|chdir|setenv|with-stdout-to|with-stderr-to|with-outputs-to|ignore-stdout|ignore-stderr|ignore-outputs|progn|echo|cat|copy|copy#|system|bash|write-file|diff|diff\?)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.action.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.install.dune</string>
        <key>begin</key>
        <string>\(\s*(section)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.rule.mode.dune</string>
            <key>match</key>
            <string>\b(lib|libexec|bin|sbin|toplevel|share|share_root|etc|doc|stublibs|man|misc)\b</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.install.dune</string>
        <key>begin</key>
        <string>\(\s*(files)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.library.kind.dune</string>
        <key>begin</key>
        <string>\(\s*(normal|ppx_deriver|ppx_rewriter)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.language.rule.mode.dune</string>
          </dict>
        </dict>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.executables.dune</string>
        <key>begin</key>
        <string>\(\s*(name|link_executables|link_flags|modes)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.lib-or-exec.buildable.dune</string>
        <key>begin</key>
        <string>\(\s*(preprocess|preprocessor_deps|lint|modules|modules_without_implementation|libraries|flags|ocamlc_flags|ocamlopt_flags|js_of_ocaml|allow_overlapping_dependencies|per_module)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.lib-or-exec.buildable.preprocess.dune</string>
        <key>begin</key>
        <string>\(\s*(no_preprocessing|action|pps)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.lib-or-exec.buildable.preprocess_deps.dune</string>
        <key>begin</key>
        <string>\(\s*(file|alias|alias_rec|glob_files|files_recursively_in)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.stanza.lib-or-exec.buildable.libraries.dune</string>
        <key>begin</key>
        <string>\(\s*(select)\s</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dune</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>constant.numeric.dune</string>
        <key>match</key>
        <string>\b\d+\b</string>
      </dict>
      <dict>
        <key>name</key>
        <string>constant.language.dune</string>
        <key>match</key>
        <string>(true|false)</string>
      </dict>
      <dict>
        <key>name</key>
        <string>keyword.other.dune</string>
        <key>match</key>
        <string>\s(as|from|-&gt;)\s</string>
      </dict>
      <dict>
        <key>name</key>
        <string>keyword.other.dune</string>
        <key>match</key>
        <string>(\!)</string>
      </dict>
      <dict>
        <key>name</key>
        <string>constant.language.flag.dune</string>
        <key>match</key>
        <string>(:\w+)\b</string>
      </dict>
      <dict>
        <key>name</key>
        <string>constant.language.rule.mode.dune</string>
        <key>match</key>
        <string>\b(standard|fallback|promote|promote-until-then)\b</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#string</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#variable</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#list</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#atom</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.dune</string>
            <key>begin</key>
            <string>#\|</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.begin.dune</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\|#</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.end.dune</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.sexp.dune</string>
            <key>begin</key>
            <string>#;\s*\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment-inner</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.dune</string>
            <key>match</key>
            <string>;.*$</string>
          </dict>
        </array>
      </dict>
      <key>comment-inner</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.sexp.inner.dune</string>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment-inner</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.double.dune</string>
            <key>begin</key>
            <string>(?=[^\\])(")</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.dune</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(")</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.dune</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.character.string.escape.dune</string>
                <key>match</key>
                <string>\\"</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#variable</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>variable</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>variable.other.dune</string>
            <key>match</key>
            <string>\${[^}]*}</string>
          </dict>
        </array>
      </dict>
      <key>list</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.list.dune</string>
            <key>begin</key>
            <string>(\()</string>
            <key>end</key>
            <string>(\))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.tag.list.parenthesis.dune</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>ok, for this one, I didn't know what to choose</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>atom</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.atom.dune</string>
            <key>match</key>
            <string>\b[^\s]+\b</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>